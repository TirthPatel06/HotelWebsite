[DEBUG] 2020-09-30 09:47:47.580 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-09-30 09:47:47.634 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-09-30 09:47:47.678 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-09-30 09:47:48.135 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-09-30 09:47:48.160 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-09-30 09:47:49.380 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-09-30 09:47:50.987 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-09-30 09:47:51.083 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-09-30 09:47:51.087 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-09-30 09:47:51.143 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-09-30 09:47:51.312 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@572e6fd9
[DEBUG] 2020-09-30 09:47:51.320 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@572e6fd9
[DEBUG] 2020-09-30 09:47:51.320 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@572e6fd9
[DEBUG] 2020-09-30 09:47:51.321 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@12abdfb
[DEBUG] 2020-09-30 09:47:51.322 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@68577ba8
[DEBUG] 2020-09-30 09:47:51.323 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@51d9b06c
[DEBUG] 2020-09-30 09:47:51.331 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1744a475
[DEBUG] 2020-09-30 09:47:51.332 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1744a475
[DEBUG] 2020-09-30 09:47:51.332 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1744a475
[DEBUG] 2020-09-30 09:47:51.342 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@ca93621
[DEBUG] 2020-09-30 09:47:51.342 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@ca93621
[DEBUG] 2020-09-30 09:47:51.342 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@ca93621
[DEBUG] 2020-09-30 09:47:51.349 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@9d3c67
[DEBUG] 2020-09-30 09:47:51.352 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@9d3c67
[DEBUG] 2020-09-30 09:47:51.352 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@9d3c67
[DEBUG] 2020-09-30 09:47:51.354 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@71466383
[DEBUG] 2020-09-30 09:47:51.354 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@71466383
[DEBUG] 2020-09-30 09:47:51.354 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@71466383
[DEBUG] 2020-09-30 09:47:51.363 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@129fed45
[DEBUG] 2020-09-30 09:47:51.363 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@129fed45
[DEBUG] 2020-09-30 09:47:51.366 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@129fed45
[DEBUG] 2020-09-30 09:47:51.368 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7a2b1eb4
[DEBUG] 2020-09-30 09:47:51.374 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7a2b1eb4
[DEBUG] 2020-09-30 09:47:51.374 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7a2b1eb4
[DEBUG] 2020-09-30 09:47:51.376 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@aa149ed
[DEBUG] 2020-09-30 09:47:51.381 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@aa149ed
[DEBUG] 2020-09-30 09:47:51.381 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@aa149ed
[DEBUG] 2020-09-30 09:47:51.382 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@8ee0c23
[DEBUG] 2020-09-30 09:47:51.383 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@8ee0c23
[DEBUG] 2020-09-30 09:47:51.392 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f508f3c
[DEBUG] 2020-09-30 09:47:51.393 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f508f3c
[DEBUG] 2020-09-30 09:47:51.405 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@ffaaaf0
[DEBUG] 2020-09-30 09:47:51.406 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@ffaaaf0
[DEBUG] 2020-09-30 09:47:51.407 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@69a2b3b6
[DEBUG] 2020-09-30 09:47:51.408 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e141e42
[DEBUG] 2020-09-30 09:47:51.411 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2de50ee4
[DEBUG] 2020-09-30 09:47:51.412 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2de50ee4
[DEBUG] 2020-09-30 09:47:51.418 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4e17913b
[DEBUG] 2020-09-30 09:47:51.420 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4e17913b
[DEBUG] 2020-09-30 09:47:51.443 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@129bd55d
[DEBUG] 2020-09-30 09:47:51.444 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@129bd55d
[DEBUG] 2020-09-30 09:47:51.451 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4defd42
[DEBUG] 2020-09-30 09:47:51.452 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4defd42
[DEBUG] 2020-09-30 09:47:51.456 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@40e60ece
[DEBUG] 2020-09-30 09:47:51.456 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@40e60ece
[DEBUG] 2020-09-30 09:47:51.458 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4893b344
[DEBUG] 2020-09-30 09:47:51.458 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4893b344
[DEBUG] 2020-09-30 09:47:51.460 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51b35e4e
[DEBUG] 2020-09-30 09:47:51.460 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51b35e4e
[DEBUG] 2020-09-30 09:47:51.468 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@62db0521
[DEBUG] 2020-09-30 09:47:51.468 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@62db0521
[DEBUG] 2020-09-30 09:47:51.477 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be3a9ce
[DEBUG] 2020-09-30 09:47:51.477 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be3a9ce
[DEBUG] 2020-09-30 09:47:51.479 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@57c47a9e
[DEBUG] 2020-09-30 09:47:51.480 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57c47a9e
[DEBUG] 2020-09-30 09:47:51.484 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@715d6168
[DEBUG] 2020-09-30 09:47:51.486 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@715d6168
[DEBUG] 2020-09-30 09:47:51.487 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@75a118e6
[DEBUG] 2020-09-30 09:47:51.493 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@75a118e6
[DEBUG] 2020-09-30 09:47:51.493 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@75a118e6
[DEBUG] 2020-09-30 09:47:51.497 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77d680e6
[DEBUG] 2020-09-30 09:47:51.499 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5c1f6d57
[DEBUG] 2020-09-30 09:47:51.499 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5c1f6d57
[DEBUG] 2020-09-30 09:47:51.499 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5c1f6d57
[DEBUG] 2020-09-30 09:47:51.505 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@17b6d426
[DEBUG] 2020-09-30 09:47:51.507 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@20e3c449
[DEBUG] 2020-09-30 09:47:51.509 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20e3c449
[DEBUG] 2020-09-30 09:47:51.511 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7b7683d4
[DEBUG] 2020-09-30 09:47:51.511 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7b7683d4
[DEBUG] 2020-09-30 09:47:51.514 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6137cf6e
[DEBUG] 2020-09-30 09:47:51.515 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6137cf6e
[DEBUG] 2020-09-30 09:47:51.518 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@24934262
[DEBUG] 2020-09-30 09:47:51.523 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@24934262
[DEBUG] 2020-09-30 09:47:51.524 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@341672e
[DEBUG] 2020-09-30 09:47:51.524 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@341672e
[DEBUG] 2020-09-30 09:47:51.526 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@66c38e51
[DEBUG] 2020-09-30 09:47:51.533 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@764cba
[DEBUG] 2020-09-30 09:47:51.534 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@764cba
[DEBUG] 2020-09-30 09:47:51.534 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@764cba
[DEBUG] 2020-09-30 09:47:51.535 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@144ab54
[DEBUG] 2020-09-30 09:47:51.536 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@144ab54
[DEBUG] 2020-09-30 09:47:51.537 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@144ab54
[DEBUG] 2020-09-30 09:47:51.539 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e3861d7
[DEBUG] 2020-09-30 09:47:51.539 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@9e2ad91
[DEBUG] 2020-09-30 09:47:51.546 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@74dbb1ee
[DEBUG] 2020-09-30 09:47:51.546 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@74dbb1ee
[DEBUG] 2020-09-30 09:47:51.546 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@74dbb1ee
[DEBUG] 2020-09-30 09:47:51.548 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@618ad2aa
[DEBUG] 2020-09-30 09:47:51.548 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@618ad2aa
[DEBUG] 2020-09-30 09:47:51.552 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@618ad2aa
[DEBUG] 2020-09-30 09:47:51.553 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4867ab9f
[DEBUG] 2020-09-30 09:47:51.557 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2caa5d7c
[DEBUG] 2020-09-30 09:47:51.560 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1de0a46c
[DEBUG] 2020-09-30 09:47:51.560 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1de0a46c
[DEBUG] 2020-09-30 09:47:51.560 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54f4a7f0
[DEBUG] 2020-09-30 09:47:51.571 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@43b40233
[DEBUG] 2020-09-30 09:47:51.571 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@43b40233
[DEBUG] 2020-09-30 09:47:51.579 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6ba30587
[DEBUG] 2020-09-30 09:47:51.579 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6ba30587
[DEBUG] 2020-09-30 09:47:51.580 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2eadc9f6
[DEBUG] 2020-09-30 09:47:51.581 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@778d82e9
[DEBUG] 2020-09-30 09:47:51.582 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@700f518a
[DEBUG] 2020-09-30 09:47:51.597 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4d8286c4
[DEBUG] 2020-09-30 09:47:51.597 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4d8286c4
[DEBUG] 2020-09-30 09:47:51.598 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6778aea6
[DEBUG] 2020-09-30 09:47:51.598 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e1ce44
[DEBUG] 2020-09-30 09:47:51.599 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@69228e85
[DEBUG] 2020-09-30 09:47:51.599 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7a7cc52c
[DEBUG] 2020-09-30 09:47:51.599 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5853495b
[DEBUG] 2020-09-30 09:47:51.599 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@524a2ffb
[DEBUG] 2020-09-30 09:47:51.599 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f61d591
[DEBUG] 2020-09-30 09:47:51.599 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@332820f4
[DEBUG] 2020-09-30 09:47:51.707 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-09-30 09:47:51.708 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-09-30 09:47:51.717 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-09-30 09:47:51.719 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-09-30 09:47:51.720 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-09-30 09:47:51.723 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-09-30 09:47:51.727 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-09-30 09:47:51.736 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-09-30 09:47:51.738 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-09-30 09:47:51.745 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-09-30 09:47:51.746 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-09-30 09:47:51.747 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-09-30 09:47:51.747 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-09-30 09:47:51.749 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-09-30 09:47:51.783 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hotel_test
[INFO ] 2020-09-30 09:47:51.786 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-09-30 09:47:51.786 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-09-30 09:47:52.353 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-09-30 09:47:52.800 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-09-30 09:47:52.801 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-09-30 09:47:52.801 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-09-30 09:47:52.970 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-09-30 09:47:53.026 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-09-30 09:47:53.120 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-09-30 09:47:53.268 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-09-30 09:47:53.285 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a37191a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5854a18]
[DEBUG] 2020-09-30 09:47:53.443 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.User
[DEBUG] 2020-09-30 09:47:53.493 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-09-30 09:47:53.509 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-09-30 09:47:53.518 [main] EntityBinder - Bind entity hote.entity.User on table user
[DEBUG] 2020-09-30 09:47:53.586 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-09-30 09:47:53.597 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-09-30 09:47:53.599 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:id]
[DEBUG] 2020-09-30 09:47:53.608 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-09-30 09:47:53.627 [main] PropertyBinder - Building property id
[DEBUG] 2020-09-30 09:47:53.637 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-09-30 09:47:53.639 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-09-30 09:47:53.640 [main] PropertyBinder - MetadataSourceProcessor property first_name with lazy=false
[DEBUG] 2020-09-30 09:47:53.642 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:first_name]
[DEBUG] 2020-09-30 09:47:53.642 [main] SimpleValueBinder - building SimpleValue for first_name
[DEBUG] 2020-09-30 09:47:53.643 [main] PropertyBinder - Building property first_name
[DEBUG] 2020-09-30 09:47:53.643 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-09-30 09:47:53.643 [main] PropertyBinder - MetadataSourceProcessor property last_name with lazy=false
[DEBUG] 2020-09-30 09:47:53.643 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:last_name]
[DEBUG] 2020-09-30 09:47:53.643 [main] SimpleValueBinder - building SimpleValue for last_name
[DEBUG] 2020-09-30 09:47:53.644 [main] PropertyBinder - Building property last_name
[DEBUG] 2020-09-30 09:47:53.644 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-09-30 09:47:53.644 [main] PropertyBinder - MetadataSourceProcessor property user_name with lazy=false
[DEBUG] 2020-09-30 09:47:53.645 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:user_name]
[DEBUG] 2020-09-30 09:47:53.647 [main] SimpleValueBinder - building SimpleValue for user_name
[DEBUG] 2020-09-30 09:47:53.647 [main] PropertyBinder - Building property user_name
[DEBUG] 2020-09-30 09:47:53.654 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-09-30 09:47:53.655 [main] SimpleValueBinder - Starting fillSimpleValue for first_name
[DEBUG] 2020-09-30 09:47:53.655 [main] SimpleValueBinder - Starting fillSimpleValue for last_name
[DEBUG] 2020-09-30 09:47:53.655 [main] SimpleValueBinder - Starting fillSimpleValue for user_name
[DEBUG] 2020-09-30 09:47:53.658 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-09-30 09:47:53.850 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-09-30 09:47:53.853 [main] Settings - SessionFactory name : null
[DEBUG] 2020-09-30 09:47:53.854 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-09-30 09:47:53.854 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-09-30 09:47:53.857 [main] Settings - Statistics: disabled
[DEBUG] 2020-09-30 09:47:53.857 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-09-30 09:47:53.857 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-09-30 09:47:53.857 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-09-30 09:47:53.857 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-09-30 09:47:53.858 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-09-30 09:47:53.858 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-09-30 09:47:53.858 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-09-30 09:47:53.858 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-09-30 09:47:53.858 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-09-30 09:47:53.859 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-09-30 09:47:53.859 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-09-30 09:47:53.859 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-09-30 09:47:53.859 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-09-30 09:47:53.859 [main] Settings - Named query checking : enabled
[DEBUG] 2020-09-30 09:47:53.865 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-09-30 09:47:53.865 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-09-30 09:47:53.869 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-09-30 09:47:53.869 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-09-30 09:47:53.869 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-09-30 09:47:53.869 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-09-30 09:47:53.870 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-09-30 09:47:53.870 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-09-30 09:47:53.870 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-09-30 09:47:53.870 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-09-30 09:47:53.871 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-09-30 09:47:53.871 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-09-30 09:47:53.871 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-09-30 09:47:53.871 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-09-30 09:47:53.871 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-09-30 09:47:53.872 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-09-30 09:47:53.872 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-09-30 09:47:53.872 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-09-30 09:47:53.872 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-09-30 09:47:53.872 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-09-30 09:47:54.050 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-09-30 09:47:54.113 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-09-30 09:47:54.113 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/snap/intellij-idea-ultimate/248/lib/idea_rt.jar:/snap/intellij-idea-ultimate/248/plugins/junit/lib/junit5-rt.jar:/snap/intellij-idea-ultimate/248/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/HotelWebsie/target/test-classes:/home/student/IdeaProjects/HotelWebsie/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 hotel.persistence.UserDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-48-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hotel_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.8, user.dir=/home/student/IdeaProjects/HotelWebsie, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@9c93d16, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/hotel_test, java.class.version=55.0}
[DEBUG] 2020-09-30 09:47:54.205 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-09-30 09:47:54.206 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-09-30 09:47:54.214 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-09-30 09:47:54.214 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a37191a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@67cffead]
[DEBUG] 2020-09-30 09:47:54.531 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-09-30 09:47:54.533 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-09-30 09:47:54.618 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-09-30 09:47:54.618 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-09-30 09:47:55.675 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.User
[DEBUG] 2020-09-30 09:47:55.677 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-09-30 09:47:55.677 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.first_name as first_na2_0_, user_.last_name as last_nam3_0_, user_.user_name as user_nam4_0_ from user user_ where user_.id=?
[DEBUG] 2020-09-30 09:47:55.677 [main] AbstractEntityPersister -  Insert 0: insert into user (first_name, last_name, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2020-09-30 09:47:55.678 [main] AbstractEntityPersister -  Update 0: update user set first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2020-09-30 09:47:55.678 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-09-30 09:47:55.678 [main] AbstractEntityPersister -  Identity insert: insert into user (first_name, last_name, user_name) values (?, ?, ?)
[DEBUG] 2020-09-30 09:47:55.788 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a04f730]
[DEBUG] 2020-09-30 09:47:55.791 [main] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-09-30 09:47:55.792 [main] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-09-30 09:47:55.792 [main] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-09-30 09:47:55.801 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-09-30 09:47:55.848 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-09-30 09:47:55.862 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-09-30 09:47:55.867 [main] EntityLoader - Static select for entity hote.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.first_name as first_na2_0_0_, user0_.last_name as last_nam3_0_0_, user0_.user_name as user_nam4_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-09-30 09:47:55.867 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e49ded]
[DEBUG] 2020-09-30 09:47:55.868 [main] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-09-30 09:47:55.868 [main] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-09-30 09:47:55.868 [main] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-09-30 09:47:55.878 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-09-30 09:47:55.879 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-09-30 09:47:55.879 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-09-30 09:47:55.880 [main] EntityLoader - Static select for entity hote.entity.User [READ]: select user0_.id as id1_0_0_, user0_.first_name as first_na2_0_0_, user0_.last_name as last_nam3_0_0_, user0_.user_name as user_nam4_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-09-30 09:47:55.941 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.User: select user0_.id as id1_0_0_, user0_.first_name as first_na2_0_0_, user0_.last_name as last_nam3_0_0_, user0_.user_name as user_nam4_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-09-30 09:47:55.950 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.User: select user0_.id as id1_0_0_, user0_.first_name as first_na2_0_0_, user0_.last_name as last_nam3_0_0_, user0_.user_name as user_nam4_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-09-30 09:47:56.056 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-09-30 09:47:56.065 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-09-30 09:47:56.066 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-09-30 09:47:56.095 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-09-30 09:47:56.095 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-09-30 09:47:56.109 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-09-30 09:47:56.110 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-09-30 09:47:56.123 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3a3f96ab
[DEBUG] 2020-09-30 09:47:56.138 [main] SessionFactoryRegistry - Registering SessionFactory: b3ea72a3-ceba-42c3-a2b7-9f4ea9a58837 (<unnamed>)
[DEBUG] 2020-09-30 09:47:56.138 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-09-30 09:47:56.434 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-09-30 09:47:56.464 [main] SQL - select user0_.id as id1_0_0_, user0_.first_name as first_na2_0_0_, user0_.last_name as last_nam3_0_0_, user0_.user_name as user_nam4_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-09-30 09:47:56.506 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-09-30 09:47:56.507 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-09-30 09:47:56.544 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#3]
[DEBUG] 2020-09-30 09:47:56.556 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Barney
[DEBUG] 2020-09-30 09:47:56.557 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:56.561 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Curry
[DEBUG] 2020-09-30 09:47:56.566 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:56.566 [main] TwoPhaseLoad - Processing attribute `user_name` : value = bcurry
[DEBUG] 2020-09-30 09:47:56.566 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:56.568 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#3]
[DEBUG] 2020-09-30 09:47:56.569 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 09:47:56.570 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#3
[DEBUG] 2020-09-30 09:47:56.571 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 09:47:56.608 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-09-30 09:47:56.609 [main] TransactionImpl - begin
[DEBUG] 2020-09-30 09:47:56.659 [main] TransactionImpl - committing
[DEBUG] 2020-09-30 09:47:56.660 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-09-30 09:47:56.660 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-09-30 09:47:56.662 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-09-30 09:47:56.662 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-09-30 09:47:56.664 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-09-30 09:47:56.664 [main] EntityPrinter - hote.entity.User{user_name=bcurry, last_name=Curry, id=3, first_name=Barney}
[DEBUG] 2020-09-30 09:47:56.690 [main] SQL - delete from user where id=?
[DEBUG] 2020-09-30 09:47:56.714 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 09:47:56.719 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 09:47:56.720 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-09-30 09:47:56.720 [main] SQL - select user0_.id as id1_0_0_, user0_.first_name as first_na2_0_0_, user0_.last_name as last_nam3_0_0_, user0_.user_name as user_nam4_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-09-30 09:47:56.733 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 09:47:56.733 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#3
[DEBUG] 2020-09-30 09:47:56.733 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 09:47:57.104 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-09-30 09:47:57.109 [main] TransactionImpl - begin
[DEBUG] 2020-09-30 09:47:57.127 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-09-30 09:47:57.129 [main] SQL - insert into user (first_name, last_name, user_name) values (?, ?, ?)
[DEBUG] 2020-09-30 09:47:57.179 [main] IdentifierGeneratorHelper - Natively generated identity: 5
[DEBUG] 2020-09-30 09:47:57.182 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 09:47:57.184 [main] TransactionImpl - committing
[DEBUG] 2020-09-30 09:47:57.185 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-09-30 09:47:57.191 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-09-30 09:47:57.192 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-09-30 09:47:57.192 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-09-30 09:47:57.192 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-09-30 09:47:57.192 [main] EntityPrinter - hote.entity.User{user_name=jackrobert, last_name=robertson, id=5, first_name=jack}
[DEBUG] 2020-09-30 09:47:57.202 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 09:47:57.205 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 09:47:57.217 [main] SQL - select user0_.id as id1_0_0_, user0_.first_name as first_na2_0_0_, user0_.last_name as last_nam3_0_0_, user0_.user_name as user_nam4_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-09-30 09:47:57.225 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-09-30 09:47:57.225 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-09-30 09:47:57.229 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#5]
[DEBUG] 2020-09-30 09:47:57.230 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jack
[DEBUG] 2020-09-30 09:47:57.230 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:57.230 [main] TwoPhaseLoad - Processing attribute `last_name` : value = robertson
[DEBUG] 2020-09-30 09:47:57.230 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:57.230 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jackrobert
[DEBUG] 2020-09-30 09:47:57.230 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:57.230 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#5]
[DEBUG] 2020-09-30 09:47:57.233 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 09:47:57.233 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#5
[DEBUG] 2020-09-30 09:47:57.234 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 09:47:57.829 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-09-30 09:47:57.947 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d6b532f
[DEBUG] 2020-09-30 09:47:58.111 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0
[DEBUG] 2020-09-30 09:47:58.139 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 09:47:58.194 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'hote'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-09-30 09:47:58.294 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-09-30 09:47:58.358 [main] FromElement - FromClause{level=1} : hote.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-09-30 09:47:58.364 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-09-30 09:47:58.373 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-09-30 09:47:58.373 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2020-09-30 09:47:58.411 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-09-30 09:47:58.411 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-09-30 09:47:58.412 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_0_, user0_.last_name as last_nam3_0_, user0_.user_name as user_nam4_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=hote.entity.User}}

[DEBUG] 2020-09-30 09:47:58.412 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 09:47:58.444 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0
[DEBUG] 2020-09-30 09:47:58.444 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_0_, user0_.first_name as first_na2_0_, user0_.last_name as last_nam3_0_, user0_.user_name as user_nam4_0_ from user user0_
[DEBUG] 2020-09-30 09:47:58.444 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 09:47:58.500 [main] SQL - select user0_.id as id1_0_, user0_.first_name as first_na2_0_, user0_.last_name as last_nam3_0_, user0_.user_name as user_nam4_0_ from user user0_
[DEBUG] 2020-09-30 09:47:58.513 [main] Loader - Result set row: 0
[DEBUG] 2020-09-30 09:47:58.523 [main] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-09-30 09:47:58.523 [main] Loader - Result set row: 1
[DEBUG] 2020-09-30 09:47:58.524 [main] Loader - Result row: EntityKey[hote.entity.User#2]
[DEBUG] 2020-09-30 09:47:58.525 [main] Loader - Result set row: 2
[DEBUG] 2020-09-30 09:47:58.525 [main] Loader - Result row: EntityKey[hote.entity.User#3]
[DEBUG] 2020-09-30 09:47:58.525 [main] Loader - Result set row: 3
[DEBUG] 2020-09-30 09:47:58.525 [main] Loader - Result row: EntityKey[hote.entity.User#4]
[DEBUG] 2020-09-30 09:47:58.526 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-09-30 09:47:58.526 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-09-30 09:47:58.526 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:58.526 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-09-30 09:47:58.526 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:58.526 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-09-30 09:47:58.533 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:58.533 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-09-30 09:47:58.533 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-09-30 09:47:58.533 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-09-30 09:47:58.533 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:58.533 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-09-30 09:47:58.533 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:58.536 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-09-30 09:47:58.537 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:58.537 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-09-30 09:47:58.537 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#3]
[DEBUG] 2020-09-30 09:47:58.537 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Barney
[DEBUG] 2020-09-30 09:47:58.537 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:58.539 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Curry
[DEBUG] 2020-09-30 09:47:58.539 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:58.539 [main] TwoPhaseLoad - Processing attribute `user_name` : value = bcurry
[DEBUG] 2020-09-30 09:47:58.539 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:58.539 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#3]
[DEBUG] 2020-09-30 09:47:58.540 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#4]
[DEBUG] 2020-09-30 09:47:58.542 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Karen
[DEBUG] 2020-09-30 09:47:58.544 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:58.544 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Mack
[DEBUG] 2020-09-30 09:47:58.544 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:58.544 [main] TwoPhaseLoad - Processing attribute `user_name` : value = kmack
[DEBUG] 2020-09-30 09:47:58.544 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:58.544 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#4]
[DEBUG] 2020-09-30 09:47:58.546 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 09:47:58.999 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.last_name like :param0
[DEBUG] 2020-09-30 09:47:59.002 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.last_name like :param0
[DEBUG] 2020-09-30 09:47:59.004 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 09:47:59.015 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'hote'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'last_name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-09-30 09:47:59.015 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-09-30 09:47:59.016 [main] FromElement - FromClause{level=1} : hote.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-09-30 09:47:59.016 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-09-30 09:47:59.031 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-09-30 09:47:59.040 [main] DotNode - getDataType() : last_name -> org.hibernate.type.StringType@ffaaaf0
[DEBUG] 2020-09-30 09:47:59.046 [main] FromReferenceNode - Resolved : generatedAlias0.last_name -> user0_.last_name
[DEBUG] 2020-09-30 09:47:59.048 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-09-30 09:47:59.048 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.last_name user0_.id last_name ) ? ) ) )
[DEBUG] 2020-09-30 09:47:59.049 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-09-30 09:47:59.058 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-09-30 09:47:59.060 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_0_, user0_.last_name as last_nam3_0_, user0_.user_name as user_nam4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=hote.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.last_name' {propertyName=last_name,dereferenceType=PRIMITIVE,getPropertyPath=last_name,path=generatedAlias0.last_name,tableAlias=user0_,className=hote.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'last_name' {originalText=last_name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@ffaaaf0}

[DEBUG] 2020-09-30 09:47:59.061 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 09:47:59.062 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.last_name like :param0
[DEBUG] 2020-09-30 09:47:59.062 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_0_, user0_.first_name as first_na2_0_, user0_.last_name as last_nam3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.last_name like ?
[DEBUG] 2020-09-30 09:47:59.062 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 09:47:59.079 [main] SQL - select user0_.id as id1_0_, user0_.first_name as first_na2_0_, user0_.last_name as last_nam3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.last_name like ?
[DEBUG] 2020-09-30 09:47:59.096 [main] Loader - Result set row: 0
[DEBUG] 2020-09-30 09:47:59.096 [main] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-09-30 09:47:59.097 [main] Loader - Result set row: 1
[DEBUG] 2020-09-30 09:47:59.097 [main] Loader - Result row: EntityKey[hote.entity.User#3]
[DEBUG] 2020-09-30 09:47:59.097 [main] Loader - Result set row: 2
[DEBUG] 2020-09-30 09:47:59.097 [main] Loader - Result row: EntityKey[hote.entity.User#4]
[DEBUG] 2020-09-30 09:47:59.100 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-09-30 09:47:59.100 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-09-30 09:47:59.100 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:59.100 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-09-30 09:47:59.100 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:59.101 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-09-30 09:47:59.101 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:59.101 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-09-30 09:47:59.101 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#3]
[DEBUG] 2020-09-30 09:47:59.101 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Barney
[DEBUG] 2020-09-30 09:47:59.105 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:59.105 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Curry
[DEBUG] 2020-09-30 09:47:59.105 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:59.105 [main] TwoPhaseLoad - Processing attribute `user_name` : value = bcurry
[DEBUG] 2020-09-30 09:47:59.105 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:59.105 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#3]
[DEBUG] 2020-09-30 09:47:59.106 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#4]
[DEBUG] 2020-09-30 09:47:59.106 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Karen
[DEBUG] 2020-09-30 09:47:59.106 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:59.106 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Mack
[DEBUG] 2020-09-30 09:47:59.106 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:59.106 [main] TwoPhaseLoad - Processing attribute `user_name` : value = kmack
[DEBUG] 2020-09-30 09:47:59.106 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:59.106 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#4]
[DEBUG] 2020-09-30 09:47:59.109 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 09:47:59.443 [main] SQL - select user0_.id as id1_0_0_, user0_.first_name as first_na2_0_0_, user0_.last_name as last_nam3_0_0_, user0_.user_name as user_nam4_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-09-30 09:47:59.470 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-09-30 09:47:59.493 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-09-30 09:47:59.493 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-09-30 09:47:59.493 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-09-30 09:47:59.494 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:59.494 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-09-30 09:47:59.494 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:59.494 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-09-30 09:47:59.494 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:59.494 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-09-30 09:47:59.498 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 09:47:59.498 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-09-30 09:47:59.498 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 09:47:59.530 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-09-30 09:47:59.531 [main] TransactionImpl - begin
[DEBUG] 2020-09-30 09:47:59.577 [main] TransactionImpl - committing
[DEBUG] 2020-09-30 09:47:59.577 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-09-30 09:47:59.577 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-09-30 09:47:59.592 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-09-30 09:47:59.593 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-09-30 09:47:59.593 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-09-30 09:47:59.593 [main] EntityPrinter - hote.entity.User{user_name=fhensen, last_name=Hensen, id=2, first_name=mike}
[DEBUG] 2020-09-30 09:47:59.593 [main] SQL - update user set first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2020-09-30 09:47:59.623 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 09:47:59.641 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 09:47:59.646 [main] SQL - select user0_.id as id1_0_0_, user0_.first_name as first_na2_0_0_, user0_.last_name as last_nam3_0_0_, user0_.user_name as user_nam4_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-09-30 09:47:59.690 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-09-30 09:47:59.690 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-09-30 09:47:59.691 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-09-30 09:47:59.691 [main] TwoPhaseLoad - Processing attribute `first_name` : value = mike
[DEBUG] 2020-09-30 09:47:59.691 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:59.691 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-09-30 09:47:59.691 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:59.691 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-09-30 09:47:59.691 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 09:47:59.692 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-09-30 09:47:59.692 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 09:47:59.692 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-09-30 09:47:59.692 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
